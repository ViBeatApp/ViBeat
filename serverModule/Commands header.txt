Messages from client to server:

Authentication(NAME,USER_ID,IMAGE)
Give_Nearby_Parties(CLIENTLOCATION)
searchParty(NAME)
Join(PARTY_ID)
Create(NAME,IS_PRIVATE)
Disconnected

AddSong (URL)
DeleteSong(TrackID)
SwapSongs(TRACK_ID_1,TrackID_2)
PlaySong(TRACK_ID,OFFSET)
ImReady(TRACK_ID)
Pause(TRACK_ID)

RenameParty(NAME)
ConfirmRequest(USER_ID)
MakeAdmin(USER_ID)
UpdateLocation(LOCATION)
Close()  					//kill the party
LeaveParty()


Messages from server to client:
Nearbyparties(result : [{name,id,image}...]) 		
SearchResult(result : [{name,id,image}...])		// could be empty array.
Response - (bool CONFIRMED, PARTY_INFO) if rejected - Null.

GetReady(TRACK_ID,OFFSET)
Play(TRACK_ID,OFFSET)
Pause()
	
syncParty({
		"USERS",[{NAME,USER_ID,IMAGE},...]
		"ADMINS",[{NAME,USER_ID,IMAGE},...]
		"REQUESTS",[{NAME,USER_ID,IMAGE},...]			//if private - value = 0 
		"SONGS",[{URL,TRACK_ID},...]
		"PARTY_NAME","NAME"
		"IS_PRIVATE",bool IS_PRIVATE})
		
IDs:
partyID = Counter.
trackID = Counter.
userID 	= authenticationID.

{"cmd_type": command_type, "cmd_info",json}

updateParty({
		"NEW_USERS",[{NAME,USER_ID,IMAGE},...]
		"DELETE_USERS",[{USER_ID},...]
		"NEW_REQUESTS",[{NAME,USER_ID,IMAGE},...]
		"DELETE_REQUESTS",[{USER_ID},...]
		"NEW_ADMIN",[{USER_ID},...]
		"DELETE_ADMIN",[{USER_ID},...]
		"NEW_SONGS",[{URL,TRACK_ID},...]
		"DELETE_SONGS",[{TRACK_ID},...]
		"SWAP_SONGS",[{TRACK_ID_1,TRACK_ID_2},...]
		"PARTY_RENAME","NAME"
		"IS_PRIVATE",bool IS_PRIVATE})